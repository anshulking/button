
import Foundation
import Alamofire
import MapKit
class PlacesList{
    public var nextPageToken: String = ""
    public var places: [Place] = []
    public init(_ dictionary: NSDictionary){
        if let token = dictionary.value(forKey: "next_page_token"){
            nextPageToken = token as! String
        }
        if dictionary.value(forKey: "results") != nil{
            let resultArray: [NSDictionary] = dictionary.value(forKey: "results") as! [NSDictionary]
            if(resultArray.count != 0){
                for i in 0...resultArray.count-1{
                    let place: Place = Place.init(resultArray[i])
                    places.append(place)
                }
            }
        }
    }
}
class Place{
    public var placeName: String = ""
    public var placeAddress: String = ""
    public var placeID: String = ""
    public var placeLocation: CLLocation = CLLocation()
    public init(_ dictionary: NSDictionary){
        if let temp = dictionary.value(forKey: "name"){
            placeName = temp as! String
        }
        if let temp = dictionary.value(forKey: "vicinity"){
            placeAddress = temp as! String
        }
        if let temp = dictionary.value(forKey: "place_id"){
            placeID = temp as! String
        }
        let latitude = dictionary.value(forKeyPath: "geometry.location.lat") as! Double
        let longtitude = dictionary.value(forKeyPath: "geometry.location.lng") as! Double
        
        placeLocation = CLLocation.init(latitude: Double(latitude), longitude: Double(longtitude))
    }
    
}

class Webservices {
    class func getGooglePlacesList(_ type: String, success: @escaping (_ placeList: PlacesList)->Void){
        var urlRequest: URLRequest = URLRequest.init(url: URL(string: "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=23.0345116,72.5063882&radius=1000&types=food&key=AIzaSyB7yYN2Wtc7PEkneyWfVmF1SXVQomcT9k0")!, cachePolicy: URLRequest.CachePolicy.useProtocolCachePolicy, timeoutInterval: 10.0)
        urlRequest.httpMethod = "Get"
        Alamofire.request(urlRequest).responseJSON { (jsonResponse) in
            let responseDictionary = jsonResponse.result.value as! NSDictionary
            let placesList: PlacesList = PlacesList.init(responseDictionary)
            success(placesList)
        }
    }
    class func getNextResults(_ nextPageToken: String, success: @escaping (_ placeList: PlacesList)->Void){
        var urlRequest: URLRequest = URLRequest.init(url: URL(string: "https://maps.googleapis.com/maps/api/place/nearbysearch/json?pagetoken=\(nextPageToken)&key=AIzaSyB7yYN2Wtc7PEkneyWfVmF1SXVQomcT9k0")!, cachePolicy: URLRequest.CachePolicy.useProtocolCachePolicy, timeoutInterval: 10.0)
        urlRequest.httpMethod = "Get"
        Alamofire.request(urlRequest).responseJSON { (jsonResponse) in
            let responseDictionary = jsonResponse.result.value as! NSDictionary
            let placesList: PlacesList = PlacesList.init(responseDictionary)
            success(placesList)
        }
    }
}
